const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const nodemailer = require('nodemailer');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 5000;

// Middleware to parse JSON
app.use(bodyParser.json());
app.use(express.json());
app.use(cors());

// POST route to send email
app.post('/api/contact', (req, res) => {
    const { name, email, phone, message } = req.body;

    if (!name || !email || !message) {
        return res.status(400).json({ message: 'Please fill in all fields' });
    }

    const adminHtml = `
    <div class="container">
        <h2>New User Submission</h2>
        <p><strong>Name:</strong> ${name}</p>
        <p><strong>Email:</strong> ${email}</p>
        <p><strong>Phone:</strong> ${phone}</p>
        <p><strong>Message:</strong></p>
        <p>${message}</p>
        <hr>
        <p>This message was automatically generated by the system.</p>
    </div>
    `;


    const userHtml = `
    <div class="container">
        <h2>Thank You, ${name}!</h2>
        <p>We've received your message and our team will get back to you soon.</p>
        <p><strong>Your Message:</strong></p>
        <p>${message}</p>
        <hr>
        <p>If you need immediate assistance, feel free to contact us at support@example.com.</p>
        <p>â€” The Support Team</p>
    </div>
    `;

    // Create a transporter
    const transporter = nodemailer.createTransport({
        service: 'gmail',
        auth: {
            user: process.env.EMAIL_USER, // Your Gmail address
            pass: process.env.EMAIL_PASS  // Your Gmail app password
        }
    });

    // Define the email options
    const adminmailOptions = {
        from: email, // sender address
        to: process.env.EMAIL_USER, // list of receivers
        subject: 'New Contact Form Submission',
        html: adminHtml, // html body
    };

    // Acknowledgement
    const userMailOptions = {
        from: process.env.EMAIL_USER,
        to: email, // list of receivers
        subject: 'Thank you for contacting us!',
        html: userHtml
    };

    // Send email to admin
    transporter.sendMail(adminmailOptions, (error, info) => {
        if (error) {
            console.error('Error sending admin email:', error);
            return res.status(500).json({ message: 'Failed to send email' });
        }

        // Send acknowledgement email to user
        transporter.sendMail(userMailOptions, (error2, info2) => {
            if (error2) {
                console.error('Error sending user email:', error2);
                return res.status(500).json({ message: 'Failed to send acknowledgement email' });
            }

            res.status(200).json({ message: 'Emails sent successfully' });
        });
    });
});

app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});
